
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"          // dev: SQLite; in prod userai Postgres
  url      = env("DATABASE_URL")
}

model Tenant {
  id              String   @id @default(cuid())
  name            String
  slug            String   @unique
  whatsappPhoneId String?
  whatsappToken   String?
  gcalPrimaryId   String?
  gauth           GoogleAuth?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  bookings        Booking[]
}

model GoogleAuth {
  id           String   @id @default(cuid())
  tenantId     String   @unique
  accessToken  String
  refreshToken String
  scope        String
  tokenType    String
  expiryDate   BigInt   // epoch ms
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  tenant       Tenant   @relation(fields: [tenantId], references: [id])
}

model Booking {
  id            String   @id @default(cuid())
  tenantId      String
  customerName  String
  customerPhone String
  people        Int
  startAt       DateTime
  endAt         DateTime
  notes         String?
  source        String   // "whatsapp"
  waMessageId   String?
  gcalEventId   String?
  status        String   // "pending" | "confirmed" | "cancelled"
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  tenant        Tenant   @relation(fields: [tenantId], references: [id])

  @@index([tenantId, startAt])
}

model ProcessedWebhook {
  id         String   @id @default(cuid())
  tenantId   String
  provider   String   // "whatsapp"
  messageId  String
  receivedAt DateTime @default(now())

  @@unique([tenantId, provider, messageId])
}
